{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "AdminLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cyberland-registration-prod-admin",
        "RetentionInDays": 30
      }
    },
    "PublicLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cyberland-registration-prod-public",
        "RetentionInDays": 30
      }
    },
    "BasicAuthorizerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cyberland-registration-prod-basicAuthorizer",
        "RetentionInDays": 30
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "cyberland-registration",
                  "prod",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cyberland-registration-prod*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cyberland-registration-prod*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:Query",
                    "dynamodb:Scan",
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem"
                  ],
                  "Resource": [
                    "arn:aws:dynamodb:eu-central-1:*:table/cyberland-registration",
                    "arn:aws:dynamodb:eu-central-1:*:table/cyberland-registration/index/*"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject",
                    "s3:PutObject"
                  ],
                  "Resource": "arn:aws:s3:::cyberland/*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ses:SendEmail",
                    "ses:SendTemplatedEmail",
                    "ses:SendBulkTemplatedEmail"
                  ],
                  "Resource": "arn:aws:ses:eu-central-1:012345678912:identity/cyberland@ijug.eu"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ses:CreateTemplate",
                    "ses:UpdateTemplate"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "xray:PutTraceSegments",
                    "xray:PutTelemetryRecords"
                  ],
                  "Resource": [
                    "*"
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "cyberland-registration",
              "prod",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "AdminLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "dasniko.serverless.deployments.eu-central-1",
          "S3Key": "serverless/cyberland-registration/prod/1656520690899-2022-06-29T16:38:10.899Z/function.zip"
        },
        "Handler": "not.used.in.provided.runtime",
        "Runtime": "provided",
        "FunctionName": "cyberland-registration-prod-admin",
        "MemorySize": 512,
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "Active"
        },
        "Environment": {
          "Variables": {
            "DISABLE_SIGNAL_HANDLERS": "true",
            "APP_DYNAMODB_TABLE": "cyberland-registration",
            "APP_EVENTS_DATA_BUCKET": "cyberland",
            "APP_TENANT_ID": "cyberland",
            "QUARKUS_PROFILE": "cyberland"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "AdminLogGroup"
      ]
    },
    "PublicLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "dasniko.serverless.deployments.eu-central-1",
          "S3Key": "serverless/cyberland-registration/prod/1656520690899-2022-06-29T16:38:10.899Z/function.zip"
        },
        "Handler": "not.used.in.provided.runtime",
        "Runtime": "provided",
        "FunctionName": "cyberland-registration-prod-public",
        "MemorySize": 512,
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "Active"
        },
        "Environment": {
          "Variables": {
            "DISABLE_SIGNAL_HANDLERS": "true",
            "APP_DYNAMODB_TABLE": "cyberland-registration",
            "APP_EVENTS_DATA_BUCKET": "cyberland",
            "APP_TENANT_ID": "cyberland",
            "QUARKUS_PROFILE": "cyberland",
            "SLACK_OAUTH_ACCESS_TOKEN": "",
            "SLACK_CHANNEL_GENERAL": ""
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "PublicLogGroup"
      ]
    },
    "BasicAuthorizerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "dasniko.serverless.deployments.eu-central-1",
          "S3Key": "serverless/cyberland-registration/prod/1656520690899-2022-06-29T16:38:10.899Z/basicAuthorizer.zip"
        },
        "Handler": "src/main/js/basicAuthorizr.handler",
        "Runtime": "nodejs12.x",
        "FunctionName": "cyberland-registration-prod-basicAuthorizer",
        "MemorySize": 128,
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "Active"
        },
        "Environment": {
          "Variables": {
            "DISABLE_SIGNAL_HANDLERS": "true",
            "APP_DYNAMODB_TABLE": "cyberland-registration",
            "APP_EVENTS_DATA_BUCKET": "cyberland",
            "APP_TENANT_ID": "cyberland",
            "QUARKUS_PROFILE": "cyberland",
            "REGISTRATION_ADMIN": "********",
            "REGISTRATION_SECRET": "********"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "BasicAuthorizerLogGroup"
      ]
    },
    "BasicAuthorizerLambdaVersionie2QQGSyQ0aVamlgKJpZMEv4JTy315bmNILpuQh8": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "BasicAuthorizerLambdaFunction"
        },
        "CodeSha256": "8SUkpKtbnLL2fRBLOuVuzkYHO6DPdeKWTs9qS5QYVlA="
      }
    },
    "AdminLambdaVersionahbTalFqGqBbJrQ5qiOh5yEcwLIY3LeuPXzs2Nmg": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AdminLambdaFunction"
        },
        "CodeSha256": "oQz/w6+DuSjjRHc6yCsOMqnYL0XeaccapVw6ubdh/M0="
      }
    },
    "PublicLambdaVersionSrZeqZg6qodEGrfex8cC33sH38F5wvfjz23VRqUXo": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "PublicLambdaFunction"
        },
        "CodeSha256": "oQz/w6+DuSjjRHc6yCsOMqnYL0XeaccapVw6ubdh/M0="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "cyberland-registration-prod",
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceAdmin": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "admin",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceAdminProxyVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceAdmin"
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceProxyVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodAdminProxyVarAny": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceAdminProxyVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "BasicAuthorizerApiGatewayAuthorizer"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AdminLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": "BasicAuthorizerApiGatewayAuthorizer"
    },
    "ApiGatewayMethodProxyVarAny": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceProxyVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "PublicLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "PublicLambdaPermissionApiGateway"
      ]
    },
    "BasicAuthorizerApiGatewayAuthorizer": {
      "Type": "AWS::ApiGateway::Authorizer",
      "Properties": {
        "AuthorizerResultTtlInSeconds": 300,
        "IdentitySource": "method.request.header.Authorization",
        "Name": "basicAuthorizer",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "AuthorizerUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":apigateway:",
              {
                "Ref": "AWS::Region"
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "BasicAuthorizerLambdaFunction",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        },
        "Type": "TOKEN"
      }
    },
    "ApiGatewayDeployment1656520689390": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "prod"
      },
      "DependsOn": [
        "ApiGatewayMethodAdminProxyVarAny",
        "ApiGatewayMethodProxyVarAny"
      ]
    },
    "AdminLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AdminLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "BasicAuthorizerLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "BasicAuthorizerLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "PublicLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "PublicLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "DynamoDbTable": {
      "Type": "AWS::DynamoDB::Table",
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          },
          {
            "AttributeName": "eventId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "email",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 2
        },
        "TableName": "cyberland-registration",
        "TimeToLiveSpecification": {
          "AttributeName": "ttl",
          "Enabled": true
        },
        "SSESpecification": {
          "SSEEnabled": true
        },
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "event-email-index",
            "KeySchema": [
              {
                "AttributeName": "eventId",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "email",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 5,
              "WriteCapacityUnits": 2
            }
          }
        ]
      }
    },
    "GatewayResponse": {
      "Type": "AWS::ApiGateway::GatewayResponse",
      "Properties": {
        "ResponseParameters": {
          "gatewayresponse.header.WWW-Authenticate": "'Basic'"
        },
        "ResponseType": "UNAUTHORIZED",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StatusCode": 401
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "dasniko.serverless.deployments.eu-central-1",
      "Export": {
        "Name": "sls-cyberland-registration-prod-ServerlessDeploymentBucketName"
      }
    },
    "BasicAuthorizerLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "BasicAuthorizerLambdaVersionie2QQGSyQ0aVamlgKJpZMEv4JTy315bmNILpuQh8"
      },
      "Export": {
        "Name": "sls-cyberland-registration-prod-BasicAuthorizerLambdaFunctionQualifiedArn"
      }
    },
    "AdminLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AdminLambdaVersionahbTalFqGqBbJrQ5qiOh5yEcwLIY3LeuPXzs2Nmg"
      },
      "Export": {
        "Name": "sls-cyberland-registration-prod-AdminLambdaFunctionQualifiedArn"
      }
    },
    "PublicLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "PublicLambdaVersionSrZeqZg6qodEGrfex8cC33sH38F5wvfjz23VRqUXo"
      },
      "Export": {
        "Name": "sls-cyberland-registration-prod-PublicLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/prod"
          ]
        ]
      },
      "Export": {
        "Name": "sls-cyberland-registration-prod-ServiceEndpoint"
      }
    }
  }
}
